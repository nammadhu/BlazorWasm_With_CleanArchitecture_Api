done-Create card button style
When card created ,add role of creator & cardCount
After adding ,if user has role of Creator or Owner
fetch created draft profiles on main page itself
store it over offline & edit & post(Put only)


Create Card, on click it doesnt need login,
instead show a dialog of some 5 points

Each card can have multiple owners,so Add SharedOwner


UpdateCard,
	For draft show dialog as it needs approval,tiill then its not visible kind of message
	For approved,drafts are draft only,untill approval it will not be visible 
	exclept phone number,email id
	
	
1.For admin login, send with another call to fetch all details including email,phone & all
2.make sure normal call should not reveal any of those informations


ALl anonymous page,
1.OnInitialized() do anonymous call
2.On parameterset do userspecific calls

Card clone feature,for other town


Clientside only expose emailid,not userid anywhere....
even card owner also same logic ,may be like in dto add email & clientside check for that & attach


IAuthenticatedUserService authenticatedUser
--lets not to send userid from screen anytime
--once user created Card had to mark him with role of Creator
--userid passing not necessary from client,instead api only handles based on token
--but for storing locally,had to get userid

--its better,not to maintain individual card adding to town object modification locally.
Just,add or update then clear cache of town particualr id with userid  thats it

--TownController side handle userid basis cards fetching logic,of both approved & draft cards

-when creator adds, it will be shown to him only untill approval logic on his local,so add to local list data

-so one every request,with town,if he sends userid, then had to look on his id if role is creator then search in Cards table other than ApprovedCards



-When card added,its added to Cards table but not on to Town directly,so dont add to Town
-Create individual send to server as usual,on success add to his localitself card_id storage
-So on click of edit, 
 A.(from town page):if ApprovedCard has cardid then check that locally if exists then show
 B.From his own draft then just show as it is

Card checking locally,also can be with userid & without userid both it can be...so had //todo

separate view of horizantal carousel inputs of cards


Townid=> call extract town all fields with CardsApproved
1-controller endpoint readyness(Anonymous)
2-integrate with screen

Card=>
Addition,must be logged in (not blocked)
On click ,shows new card page with options to save
Send for approval screen then selecting Approvers in any town,not restricted

Towns page=>click thenopen particular page with
1>Header card with 1(main town card),if not exist then show button to add/edit
2>Add Card
3>List of existing cards

If blank(on selection with preset) section then ,create card, with dropdown of 
Town
Type
Details...

If any user who is owner

done-Remove approvedcount,rejected count ,likes all from TownCards table

Shifting done

>persistence custom
>cascading authentication
>offline state maintaining
>Ip rate limiting
>Request caching
>loading symbol



> authorizing, authentication state provider
>api endpoint versioning--done
> loading configuration from api to screen--done
>loading api response to google authentication & others--done
> persistence custom
>static then offline storage of authentication details
> offline data storage
>CORS
>api versioning--done
>caching on api and client both
>rate limiting
>authentication cascading
>api caching
>offline more & no api data serving
>MAUI
>config endpoints as post and datetime key validation

>

DbSchema changes step1

1.Load data manually & leave for sometime with message
2.UI of Add Profile without any image
3.upload image & store in folder
4.Store in azure storage account & compress
5.Cropping to screen necessary fit size if big
6.Display onscreen profiles
Deploy with message this will be charging soon


6.Paymemt gateway Adding
7.Profile validity logic of display date storing
8.Deducting money after display & giving option to modify earlier
Deploy

9.Update profile 
10.Approval logic
11.Update & Approval by System Admin
12.Approval by peer with count logic
13.Report concern & auto blocking
14.


Add Town +Update



1.Add TownProfile +Update+disable




Fetch Stored Datas

Dispaly Profiles on main page

Approve
Reject

Store images in Blob
Shrink images then Store without loosing quality
Remove Existing Image & repalce wit new

AddMoney
Deduct 

Subscription
Per Day Automation

Blob Tier changes


The expression 'profile' is invalid inside an 'Include' operation, since it does not represent a property access: 't => t.MyProperty'. To target navigations declared on derived types, use casting ('t => ((Derived)t).MyProperty') or the 'as' operator ('t => (t as Derived).MyProperty'). Collection navigation access can be filtered by composing Where, OrderBy(Descending), ThenBy(Descending), Skip or Take operations. For more information on including related data, see https://go.microsoft.com/fwlink/?LinkID=746393.
